getwd()
list.file()
list.files()
knitr::opts_chunk$set(echo = TRUE)
knitr::include_graphics('./Data/jawbone.jpg')
knitr::include_graphics('./Data/fitbit.jpg')
knitr::include_graphics('./Data/nikefuelband.jpg')
library(corrplot)
library(caret)
library(readr)
set.seed(123)
#Reading the dataset
testing <- read_csv("./Data/pml-testing.csv")
training <- read_csv("./Data/pml-training.csv")
#Dimensions of training
dim(training)
#Position of "classe" column (outcome) = 155
col_names<-names(training)[order(names(training),decreasing = FALSE)]
col_order<-order(names(training),decreasing = FALSE)
all_cols_pos<-data.frame(cbind(col_names,col_order))
all_cols_pos[all_cols_pos$col_names == "classe",]
#Removing first 5 columns because they are not helpful in prediction
training_red<-training[,-c(1:5)]
testing_red<-testing[,-c(1:5)]
#Summary of training
#Reveals presence of many columns with NAs
summary(training_red)
#Removing columns with NA
prop_NA<-vector()
order<-vector()
for (i in 1:dim(training_red)[2]-1)
{
order[i]<-i
prop_NA[i]<-round(sum(is.na(training_red[,i]))/dim(training_red)[1],3)
}
col_checks_NA<-data.frame(cbind(order,prop_NA))
x<-col_checks_NA[col_checks_NA$prop_NA>0.5,] #Columns where proportion of NAs is too much >0.5, 100 columns
training_red_final<-training_red[,-c(x[,1])]
testing_red_final<-testing_red[,-c(x[,1])]
#Checking variance among predictors, in case we need a PCA preprocessing
zero_var<-nearZeroVar(training_red_final,saveMetrics = TRUE)
#Removing new_window as it has zero variance
#Also num_window because percentUnique is too low
training_red_final<-training_red_final[,-c(1,2)]
testing_red_final<-testing_red_final[,-c(1,2)]
sum(is.na(training_red_final)) #training has 3 observations
sum(is.na(testing_red_final)) #testing has zero such observations
training_red_final2<-training_red_final[complete.cases(training_red_final),]
which(complete.cases(training_red_final)==0)
res<-cor(training_red_final2[,-53])
corrplot(res, type = "upper", order = "hclust")
#---accel_belt_z 10
#---accel_arm_y 22
#---yaw_belt 3
#---magnet_belt_x 11
training_red_final3<-training_red_final2[,-c(10,22,3,11)]
testing_red_final3<-testing_red_final[,-c(10,22,3,11)]
train_obj<-createDataPartition(training_red_final3$classe, p = 0.6, list = FALSE)
intrain<-training_red_final3[train_obj,]
intest<-training_red_final3[-train_obj,]
system.time(mod_rf<-train(classe ~ .,data = intrain,method = "rf"))
install.packages("e1071")
pred_testing<-predict(mod_rf,testing_red_final3)
install.packages("leaflet")
